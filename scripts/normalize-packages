#!/usr/bin/env node

const isEmpty = require('lodash/isEmpty')
const { getPackages, writeFile, unlink } = require('./utils')

const deleteProperties = (object, property, properties) => {
  const nestedObject = object[property]
  if (nestedObject === undefined) {
    return
  }
  properties.forEach(property => {
    delete nestedObject[property]
  })
  if (isEmpty(object[property])) {
    delete object[property]
  }
}

require('exec-promise')(() =>
  getPackages(true).map(({ dir, name, package: pkg }) => {
    pkg.name = name
    pkg.homepage = `https://github.com/vatesfr/xen-orchestra/tree/master/packages/${name}`
    pkg.bugs = `https://github.com/vatesfr/xo-web/issues`
    pkg.repository = {
      type: 'git',
      url: 'https://github.com/vatesfr/xen-orchestra.git',
    }

    delete pkg.jest
    delete pkg.standard

    deleteProperties(pkg, 'config', [ 'commitizen' ])
    deleteProperties(pkg, 'devDependencies', [
      'commitizen',
      'ghooks',
      'husky',
      'jest',
      'standard',
      'babel-eslint',
      'cz-conventional-changelog',
    ])
    deleteProperties(pkg, 'scripts', [ 'commitmsg', 'cz' ])

    return Promise.all([
      writeFile(
        `${dir}/package.json`,
        JSON.stringify(pkg, null, 2) + '\n'
      ),
      unlink(`${dir}/.editorconfig`),
      unlink(`${dir}/.gitignore`),
      unlink(`${dir}/.jshintrc`),
      unlink(`${dir}/yarn.lock`),
    ])
  })
)
